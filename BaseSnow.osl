// Compiled by Mads Dr√∏schler 11.11.2018
// license https://creativecommons.org/licenses/by-nc-sa/3.0/
// I cant remember the GL author.
	
float fract ( float x ) {
	return x - floor (x);}

float rnd(float x)
{
    return fract(sin(dot(vector(x+47.49,38.2467/(x+2.3),0), vector(12.9898, 78.233,0)))* (43758.5453));
}

float drawCircle(vector center, float radius, point Po)
{
    return 1.0 - smoothstep(0.0, radius, length(Po - center));
}


shader BaseSnow( 
	point Po = P,
 	float Time = 0,
 	float Radius = 0.012,
	int Amount = 200,
 	float Blizard = 0.1,
   	output vector Out = 0,
   )
{
    
    
    Out = vector(0, 0., 0.);
    float j;
    
    for(int i=0; i<Amount; i++)
    {
        j = float(i);
        float speed = 0.3+rnd(cos(j))*(0.7+0.5*cos(j/(float(Amount)*0.25)));
        vector center = vector((0.25-Po[1])*Blizard+rnd(j)+0.1*cos(Time+sin(j)), mod(sin(j)-speed*(Time*1.5*(0.1+Blizard)), 0.65),0);
        Out += vector(0.09*drawCircle(center, 0.001+speed*Radius,Po));
    }
}
