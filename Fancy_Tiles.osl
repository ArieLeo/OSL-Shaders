// OSL Mads Dr√∏schler
// License: https://creativecommons.org/licenses/by-nc-sa/3.0/
// I cant remember the GL authors name.

#define sqrt2 1.41421356

vector fract ( vector x ) {
	return x - floor ( x ) ;}

void rectTile(vector uv, float VertiDiv){
    vector size = vector(1.0) / vector(VertiDiv , VertiDiv,0);
    vector index = floor(uv / size);
    uv = fract(uv / size);
}

void specialBrick(vector uv, float size, float borderSize, float main, float side, float border)
{
    vector eva = abs(uv - vector(0.5));
    main = float((eva[0] + eva[1] - 1.0 + size * 0.5 + borderSize * sqrt2) < 0.0);
    main *= float(max(eva[0], eva[1]) < (0.5 - borderSize));
    side = float((eva[0] + eva[1] - 1.0 + size * 0.5 - borderSize * sqrt2) > 0.0);
}

shader Fancy_Tiles ( 

	point Po = P,
  	output vector Out = 0,
    vector white = vector(0.91, 0.96, 0.96),
    vector green = vector(0.5, 0.95, 0.5),
)
{
    vector uv = Po;
    rectTile(uv, 2.0);   
    float intensityMain, intensitySide, intensityBorder;  
    specialBrick(uv, 0.3, 0.01, intensityMain, intensitySide, intensityBorder);    
    vector col = white * intensityMain;
    vector col1 = green * intensitySide;   
    vector finalcol = clamp(col + col1, vector(0.), vector(1.0));

    Out = vector(finalcol);
}
