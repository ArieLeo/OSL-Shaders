// Compiled by Mads Dr√∏schler
// I can't remember the GL authors name
// License: https://creativecommons.org/licenses/by-nc-sa/3.0/

float fract ( float x ) {
	return x - floor (x);}

vector fract ( vector x ) {
	return x - floor (x);}
	
float random( float x){
    return fract(sin(x)*43758.5453);
}

float random(vector st){
    return fract(sin(dot(st ,vector(12.9898,78.233,0))) * 43758.5453);
}

float randomChar(vector outer, vector inner){
    float grid = 5.;
    vector margin = vector(.2,.05,0);
    float seed = 23.;
    vector borders = step(margin,inner)*step(margin,1.-inner);
    return step(.5,random(outer*seed+floor(inner*grid))) * borders[0] * borders[1];
}

vector Matrix( vector st, float Time){
    float rows = 50.0;
    vector ipos = floor(st*rows)+vector(1.,0.,0);
    ipos += vector(.0,floor(Time*20.*random(ipos[0])),0);
    vector fpos = fract(st*rows);
    vector center = (.5-fpos);
    float pct = random(ipos);
    float glow = (1.-dot(center,center)*3.)*2.0;
    return vector(randomChar(ipos,fpos) * pct * glow);
}

shader Matrix( 
	point Po = P,
	float Time = 0,
	output vector Out = 0,	
){
	vector st = Po;
   st[1] *= 0.5;

	Out = vector(Matrix(st,Time));
}
