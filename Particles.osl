// Compiled by Mads Dr√∏schler 5.11.2018
shader particles(

 	point Po = P,
 	float Time = 1.0,
	output vector Out = 0,
)
{
	point Pos = Po;
	
    point uv = Pos - .0;
    
    float uvA = uv[0]*0.5;
    float uvB = uv[1]*0.4;
    float uvC = uv[2]*0.4;
    
    vector dir = vector(uvA,uvB, 1.);
    float a2 = Time * 0.3 + .5;
    float a1 = 0.0;
    
    matrix rot1 = matrix(cos(a1), sin(a1),0,0, - sin(a1), cos(a1),0,0,0,0,0,0,0,0,0,0);
   
    matrix rot2 = matrix(cos(a2), sin(a2),0,0, - sin(a2), cos(a2),0,0,0,0,0,0,0,0,0,0);
    
    vector dirxz = dir;
    dirxz[1] = dirxz[2];
    dirxz[2] = 0;
    
    dirxz = transform( rot1,dirxz);
    
    vector dirxy = dir;
    dirxy[2] = 0;
    
    dirxy = transform (rot2, dirxy);
    vector from = vector(1.2, .1, 0.);
    from += vector(.025 * Time, .03 * Time, - 2.);
    dir -= vector(.025 * Time, .03 * Time, - 2.);
	
	vector fromxz = from;
	fromxz[1] = fromxz[2];
	fromxz[2] = 0;
	
    fromxz = transform( rot1, fromxz );
    
	
	from[2] += Time*0.002;
	
    float s = .1, fade = .07;
    vector V = vector(0.4,0,0);
    for(
        int r = 0;
        r < 12;
        r ++
    )
        {
            vector p = from + s * dir * 1.5;
            p = abs(vector(0.750,0,0) - mod(p, vector(0.750 * 2.)));
            p[0] += float(r * r) * 0.01;
            p[1] += float(r) * 0.02;
            float pa, a = pa = 0.;
            for(
                int i = 0;
                i < 19;
                i ++
            )
                {
                    p = abs(p) / dot(p, p) - 0.440;
                    a += abs(length(p) - pa * 0.2);
                    pa = length(p);
                }
            a *= a * a * 2.;
            V += vector(s, s * s, s * s * s * s) * a * 0.0017 * fade;
            fade *= 0.760;
            s += 0.180;
        }
    V = mix(vector(length(V)), V, 0.8);
    Out = vector(V * .01);
}