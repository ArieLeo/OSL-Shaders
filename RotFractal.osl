// Compiled by Mads Dr√∏schler 5.11.2018

vector rot(vector uv,float a){
	return vector(uv[0]*cos(a)-uv[1]*sin(a),uv[1]*cos(a)+uv[0]*sin(a),0.0);
}

shader RotFract( 

	point Po = P,
	float Time = 1.0,
	int MaxIt = 6,
	output float Out = 0,
)
{
	float circleSize=1.0/(3.0*pow(2.0,float(MaxIt)));
	
	point Pos = Po-0.5;
	vector uv=Pos;       
	uv=rot(uv,Time);
	uv*=sin(Time)*0.5+1.5;
	float s=0.3;
	for(int i=0;i<MaxIt;i++){
		uv=abs(uv)-s;
		uv=rot(uv,Time);
		s=s/2.1;
	}
	float c=length(uv)>circleSize?0.0:1.0;	

	Out = c;
}